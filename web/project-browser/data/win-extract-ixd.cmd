@echo off
cls
title Integra Block/Project Extractor

echo ======================================================
echo  Integra Block/Project Extractor
echo   * running in cwd  : %~dp0
echo   * running against : %*
echo ======================================================

set skipped=0
set extracted=0
set indexed=0

echo Processing built-in modules:

REM BUILT-IN MODULE EXTRACTION
echo|set /p="* extracting "
for %%f in (..\..\..\modules\*.module) do (
	IF EXIST "Integra Live\%%~nf" (
		echo|set /p=.
		set /a skipped+=1
	) ELSE (
		7z x -r -o"Integra Live\%%~nf" %%f "*.iid" > nul
		echo|set /p=+
		set /a extracted+=1
	)
)
echo.
echo   DONE (%extracted% modules extracted, %skipped% skipped)

REM INITIALIZE MODULE INDEX
copy NUL modules.xml > nul
echo.
echo Initialising module index
echo ^<?xml version="1.0" encoding="UTF-8"?^> >> modules.xml
REM echo ^<?xml-stylesheet type="text/xsl" href="../xsl/integra.module-list.render.xsl"?^> >> modules.xml
echo ^<!-- this document was generated by win-extract-ixd.cmd on %date% and should conform to libIntegra/schemas/2014/module-collection.xsd --^> >> modules.xml
echo ^<IntegraModules^> >> modules.xml

REM INDEX BUILT-IN MODULES
echo|set /p="* indexing   "
echo 	^<!-- default modules included with Integra Live --^> >> modules.xml
echo 	^<collection src="Integra Live"^> >> modules.xml
for /d %%f in ("Integra Live\*") do (
	call win-extract-iid.cmd "%%~nf" "%%~f\integra_module_data\interface_definition.iid" >> modules.xml
	echo|set /p=+
	set /a indexed+=1
)
echo 	^</collection^> >> modules.xml
echo.
echo   DONE (%indexed% modules indexed)

set project=%~n1
set src=%project: =+%

if "%~1" neq "" (
	echo.
	echo ------------------------------------------------------
	echo Processing file "%~1":

	if "%~x1" neq ".integra" (
		echo * skipping non-.integra block/project
	) else (
		REM EXTRACT PROJECT IXD
		echo * extracting IXD
		echo 7z x -y -r -o"%project%" %1 "*.ixd" ^> win-extract-ixd.log
		7z x -y -r -o"%project%" %1 "*.ixd" > win-extract-ixd.log
		echo   DONE
		
		REM EXTRACT PROJECT MODULE
		echo * extracting modules
		7z x -y -r -o"%project%" %1 "*.module" >> win-extract-ixd.log
		echo   DONE
		
		set skipped=0
		set extracted=0
		
		for %%f in ("%project%\integra_data\implementation\*.module") do (
			IF EXIST "%project%\integra_data\implementation\%%~nf" (
				echo|set /p=.
				set /a skipped+=1
			) ELSE (
				echo|set /p=+
				call 7z x -r -o"%project%/integra_data/implementation/%%~nf" "%%f" "*.iid" > nul
				IF EXIST "%project%\integra_data\implementation\%%~nf" del "%%f"
				set /a extracted+=1
			)
		)
		echo.
		echo   DONE (%extracted% modules extracted, %skipped% skipped^)
		
		echo|set /p="* indexing   "
		echo 	^<!-- modules included with block/project "%project%" --^> >> modules.xml
		echo 	^<collection src="%src%"^> >> modules.xml
		for %%f in ("%project%\integra_data\implementation\*.module") do (
			call win-extract-iid.cmd "%%~nf" "%project%\integra_data\implementation\%%~nf\integra_module_data\interface_definition.iid" >> modules.xml
		)
		echo 	^</collection^> >> modules.xml
		echo.
		echo   DONE
		REM ARG-SPECIFIED MODULE EXTRACTION/INDEXING - END
	)
) else (
	echo  No block/project files were specified for extraction ^(leaving bundled module index in modules.xml^)
	echo   - if running win-extract-ixd from the command line, specifying your block/project file as the first argument
	echo   - alternatively, you can drag your block/project file onto win-extract.cmd in Windows Explorer
)

echo.
echo Finalising module index
echo ^</IntegraModules^> >> modules.xml

if "%~1" neq "" (
	IF EXIST "%~n1.modules.xml" del "%~n1.modules.xml"
	ren modules.xml "%~n1.modules.xml"
)

:end
echo ======================================================
pause