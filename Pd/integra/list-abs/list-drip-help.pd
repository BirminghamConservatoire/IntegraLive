#N canvas 0 26 635 655 10;
#X obj 70 93 list-drip;
#X msg 70 66 1 2 3 a b c;
#X obj 70 124 print;
#X obj 151 120 bng 15 250 50 0 empty empty end 0 -6 0 8 -262144 -1
-1;
#X msg 297 70 1 2 3 a b c;
#X obj 382 129 bng 15 250 50 0 empty empty end 0 -6 0 8 -262144 -1
-1;
#X obj 297 178 print first;
#X obj 329 154 print second;
#X obj 212 390 bng 15 250 50 0 empty empty end 0 -6 0 8 -262144 -1
-1;
#X text 71 217 Use list-drip2 to combine two lists into one \, for
example by addition:;
#X obj 219 550 list;
#X obj 123 549 list prepend;
#X obj 42 584 list;
#X obj 42 612 print RESULT;
#X obj 123 289 t b b;
#X msg 123 269 bang;
#X obj 123 346 t l b;
#X text 190 302 Add these lists by element. Be careful with their lengths
;
#X text 70 18 list-drip: drips or serializes a list \, that is \, it
sends all elements one after another.;
#X text 434 105 Drip two lists in sync.;
#X text 285 429 filter out floats;
#X obj 42 552 r \$0-end;
#X obj 212 409 s \$0-end;
#X text 200 508 reset first;
#X obj 123 478 +;
#N canvas 315 75 709 522 add-lots-of-lists 0;
#X obj 273 211 bng 15 250 50 0 empty empty end 0 -6 0 8 -262144 -1
-1;
#X obj 184 167 t l b;
#X text 138 51 Add many lists by routing the result back to the second
inlet of list-drip2;
#X obj 154 142 t b a;
#X obj 103 433 print CURRENT-RESULT;
#X msg 68 145 bang;
#X text 65 125 Reset;
#X msg 232 103 0.1 0.2 0.3 0.4;
#X msg 354 103 0.01 0.02 0.03 0.04;
#X obj 184 370 list prepend;
#X obj 280 371 list;
#X obj 103 405 list;
#X obj 184 299 +;
#X msg 154 105 1 3 4 7;
#X msg 84 219 0;
#X obj 88 176 t b b b;
#N canvas 347 135 671 625 weighted 0;
#X obj 435 225 list split 1;
#X text 59 90 weighted sum of lists;
#X obj 435 294 list-math *;
#X obj 435 270 list;
#X obj 435 248 t b f;
#X msg 361 184 \$1 0 0 1;
#X msg 435 184 \$1 0 1 0;
#X obj 380 83 hsl 64 15 0 1 0 0 empty empty empty -2 -6 0 8 -262144
-1 -1 0 1;
#X obj 454 83 hsl 64 15 0 1 0 0 empty empty empty -2 -6 0 8 -262144
-1 -1 0 1;
#X obj 530 83 hsl 64 15 0 1 0 0 empty empty empty -2 -6 0 8 -262144
-1 -1 0 1;
#X obj 353 486 list;
#X obj 361 149 f;
#X obj 435 151 f;
#X obj 511 153 f;
#N canvas 0 0 516 490 list-accum 0;
#X obj 319 215 bng 15 250 50 0 empty empty end 0 -6 0 8 -262144 -1
-1;
#X obj 230 171 t l b;
#X obj 200 146 t b a;
#X msg 399 128 bang;
#X text 396 108 Reset;
#X obj 230 374 list prepend;
#X obj 326 375 list;
#X obj 149 409 list;
#X obj 230 303 +;
#X msg 375 214 0;
#X obj 379 171 t b b b;
#X obj 149 437 outlet;
#X obj 199 104 inlet;
#X obj 343 106 inlet;
#X obj 230 213 list-drip2;
#X connect 1 0 14 0;
#X connect 1 1 5 1;
#X connect 2 0 7 0;
#X connect 2 1 1 0;
#X connect 3 0 10 0;
#X connect 5 0 6 0;
#X connect 5 0 7 1;
#X connect 6 0 5 1;
#X connect 7 0 11 0;
#X connect 7 0 14 1;
#X connect 8 0 5 0;
#X connect 9 0 8 1;
#X connect 10 0 9 0;
#X connect 10 1 14 0;
#X connect 10 2 14 1;
#X connect 12 0 2 0;
#X connect 13 0 10 0;
#X connect 14 0 8 0;
#X connect 14 1 8 1;
#X connect 14 2 0 0;
#X restore 376 444 pd list-accum;
#X obj 354 509 print W_SUM;
#X msg 266 81 bang;
#X obj 269 104 t b b b;
#X msg 511 183 \$1 1 1 0;
#X obj 376 38 hsl 64 15 0 1 0 0 empty empty empty -2 -6 0 8 -262144
-1 -1 0 1;
#X obj 375 59 t b f;
#X connect 0 0 4 0;
#X connect 0 1 3 1;
#X connect 2 0 14 0;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 4 1 2 1;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 11 1;
#X connect 8 0 12 1;
#X connect 9 0 13 1;
#X connect 10 0 15 0;
#X connect 11 0 5 0;
#X connect 12 0 6 0;
#X connect 13 0 18 0;
#X connect 14 0 10 1;
#X connect 16 0 17 0;
#X connect 17 0 10 0;
#X connect 17 1 11 0;
#X connect 17 1 12 0;
#X connect 17 1 13 0;
#X connect 17 2 14 1;
#X connect 18 0 0 0;
#X connect 19 0 20 0;
#X connect 20 0 17 0;
#X connect 20 1 11 1;
#X restore 434 245 pd weighted;
#X obj 184 209 list-drip2;
#X text 419 223 Add lists weighted:;
#X connect 1 0 17 0;
#X connect 1 1 9 1;
#X connect 3 0 11 0;
#X connect 3 1 1 0;
#X connect 5 0 15 0;
#X connect 7 0 3 0;
#X connect 8 0 3 0;
#X connect 9 0 10 0;
#X connect 9 0 11 1;
#X connect 10 0 9 1;
#X connect 11 0 4 0;
#X connect 11 0 17 1;
#X connect 12 0 9 0;
#X connect 13 0 3 0;
#X connect 14 0 12 1;
#X connect 15 0 14 0;
#X connect 15 1 17 0;
#X connect 15 2 17 1;
#X connect 17 0 12 0;
#X connect 17 1 12 1;
#X connect 17 2 0 0;
#X restore 415 583 pd add-lots-of-lists;
#X text 418 557 Another example:;
#X obj 297 97 list-drip2;
#X obj 123 388 list-drip2;
#X msg 124 326 1 2 3 4;
#X msg 196 326 5 6 7 8;
#X msg 396 70 4 5 6 d e f ignored;
#N canvas 431 110 494 396 META 0;
#X text 12 5 KEYWORDS control list_op;
#X text 12 25 LICENSE SIBSD;
#X text 12 155 HELP_PATCH_AUTHORS Frank Barknecht. "pd meta" information
added by Jonathan Wilkes for Pd version 0.42.;
#X text 12 45 DESCRIPTION drip or serialize a list \, that is \, send
all elements one after another.;
#X text 12 75 INLET_0 anything;
#X text 12 95 OUTLET_0 symbol float pointer;
#X text 12 115 OUTLET_1 bang;
#X text 12 135 AUTHOR Frank Barknecht \, Mathieu Bouchard;
#X restore 567 624 pd META;
#X connect 0 0 2 0;
#X connect 0 1 3 0;
#X connect 1 0 0 0;
#X connect 4 0 27 0;
#X connect 8 0 22 0;
#X connect 10 0 11 1;
#X connect 11 0 10 0;
#X connect 11 0 12 1;
#X connect 12 0 13 0;
#X connect 14 0 29 0;
#X connect 14 1 30 0;
#X connect 15 0 14 0;
#X connect 16 0 28 0;
#X connect 16 1 11 1;
#X connect 21 0 12 0;
#X connect 24 0 11 0;
#X connect 27 0 6 0;
#X connect 27 1 7 0;
#X connect 27 2 5 0;
#X connect 28 0 24 0;
#X connect 28 1 24 1;
#X connect 28 2 8 0;
#X connect 29 0 16 0;
#X connect 30 0 28 1;
#X connect 31 0 27 1;
