<?xml version="1.0" encoding="utf-8"?>
<!--This is an auto-generated document, being the transformation output of the default modules list, which represents the full set of IID module interface contracts as XSD attribute types, and defines minimal base types (for use as module instances in IXD node graphs).-->
<xsd:schema targetNamespace="http://www.integralive.org/schemas/2014/riid" attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:riid="http://www.integralive.org/schemas/2014/riid" xmlns:rixd="http://www.integralive.org/schemas/2014/rixd" xmlns="http://www.integralive.org/schemas/2014/riid">
    <xsd:annotation>
        <xsd:documentation>XML Schema definitions for attribute groups within the reified Integra container format (RIXD).</xsd:documentation>
    </xsd:annotation>
    <xsd:import id="rixd" namespace="http://www.integralive.org/schemas/2014/rixd" schemaLocation="rixd.base.xsd" />

    <!--ATTRIBUTE GROUPS-->
    <xsd:attributeGroup name="addSynthAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Synthesise a sound using additive synthesis with 8 controllable partials and adjustable attack, decay, sustain and release settings.

                MIDI notes are received directly by the module.

                Further information on Additive Synthesis can be found [here](http://en.wikipedia.org/wiki/Additive_synthesis).

                [Tags:complex|synthesis]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="mute">
            <xsd:annotation>
                <xsd:documentation>
                    Mute the output of the module.

                    This will cause the module to become silent, but the module will remain active.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="gain">
            <xsd:annotation>
                <xsd:documentation>Set the gain of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="4" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="chNumber">
            <xsd:annotation>
                <xsd:documentation>
                    Set the MIDI receive channel number between 1 and 16

                    0 means receive on all channels
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="16" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="partial1">
            <xsd:annotation>
                <xsd:documentation>Set the level of the first partial</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="partial2">
            <xsd:annotation>
                <xsd:documentation>Set the level of the second partial</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="partial3">
            <xsd:annotation>
                <xsd:documentation>Set the level of the third partial</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="partial4">
            <xsd:annotation>
                <xsd:documentation>Set the level of the fourth partial</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="partial5">
            <xsd:annotation>
                <xsd:documentation>Set the level of the fifth partial</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="partial6">
            <xsd:annotation>
                <xsd:documentation>Set the level of the sixth partial</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="partial7">
            <xsd:annotation>
                <xsd:documentation>Set the level of the seventh partial</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="partial8">
            <xsd:annotation>
                <xsd:documentation>Set the level of the eighth partial</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="attack">
            <xsd:annotation>
                <xsd:documentation>Set the attack time in seconds for all partials</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="0.2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="decay">
            <xsd:annotation>
                <xsd:documentation>Set the attack time in seconds for all partials</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="sustain">
            <xsd:annotation>
                <xsd:documentation>Set the relative sustain level for all partials</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="release">
            <xsd:annotation>
                <xsd:documentation>Set the release time in seconds for all partials</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turn module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="audioInAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Mono audio input.

                [Tags:core|simple|input]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="startChannel">
            <xsd:annotation>
                <xsd:documentation>
                    Set input channel on the audio interface.

                    An offset of "2" will mean that the AudioIn module uses audio from channel 2 on the audio interface.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="24" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turn module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="audioOutAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Mono audio output.

                [Tags:core|simple|output]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="startChannel">
            <xsd:annotation>
                <xsd:documentation>
                    Set input channel on the audio interface.

                    An offset of "2" will mean that the AudioIn module uses audio from channel 2 on the audio interface.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="24" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turn module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="audioSettingsAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Manages Audio setup (selecting valid backends, selecting available devices, selecting device properties).

                [Tags:core]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="selectedDriver" use="required">
            <xsd:annotation>
                <xsd:documentation>the name of the Audio driver to be used</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="selectedInputDevice" use="required">
            <xsd:annotation>
                <xsd:documentation>The selected audio input device</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="selectedOutputDevice" use="required">
            <xsd:annotation>
                <xsd:documentation>The selected audio output device</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="sampleRate">
            <xsd:annotation>
                <xsd:documentation>The sample rate the software runs at</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1000000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inputChannels">
            <xsd:annotation>
                <xsd:documentation>The number of input channels to be used on the device</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="32" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outputChannels">
            <xsd:annotation>
                <xsd:documentation>The number of output channels to be used on the device</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="32" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="bandPassAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Filter module allowing only a specific band of frequencies to pass through to the output.

                [Tags:simple|processing|filter]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>
                    Bypasses the audio processing.

                    This has the same effect as passing the signal from the audio input directly to the audio output
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Controls the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="frequency">
            <xsd:annotation>
                <xsd:documentation>Set the centre frequency of the filter in Hertz</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="q">
            <xsd:annotation>
                <xsd:documentation>
                    Set the "width" of the band pass filter

                    In technical terms, this sets the filter band width in constant ratio to the centre frequency.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.001" />
                    <xsd:maxInclusive value="1000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="brightnessAnalyserAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Detect and display the frequency measured in Hz of the perceptual brightness.

                [Tags:simple|analysis|spectral]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="brightness">
            <xsd:annotation>
                <xsd:documentation>Display the frequency measured in Hz of the perceptual brightness.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20050" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="connectionAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Connection class for connecting to attributes of child instances.

                [Tags:core]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="sourcePath">
            <xsd:annotation>
                <xsd:documentation>'.' separated path to source attribute relative to parent e.g. Block1.TapDelay1.feedback</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="targetPath">
            <xsd:annotation>
                <xsd:documentation>'.' separated path to target attribute</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="containerAttributeGroup">
        <xsd:attribute name="zIndex">
            <xsd:annotation>
                <xsd:documentation>The stacking order of the container</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="-2147483648" />
                    <xsd:maxInclusive value="2147483647" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="userData">
            <xsd:annotation>
                <xsd:documentation>Arbitrary data associated with a class instance</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>
                    Turns module processing on and off

                    Overrides Module::Active to customise scope
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="info">
            <xsd:annotation>
                <xsd:documentation>
                    Used to store user-generated documentaion.

                    By convention, this documentation
                    should use markdown notation
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="controlPointAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                A class for storing a control datum that can be used to set the value of an attribute.

                [Tags:core]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="value">
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-2147483648" />
                    <xsd:maxInclusive value="2147483647" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="tick">
            <xsd:annotation>
                <xsd:documentation>Relative time in ticks</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="-1" />
                    <xsd:maxInclusive value="2147483647" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="curvature">
            <xsd:annotation>
                <xsd:documentation>
                    Applies an easing function to the interpolation from this control point to the next control point.

                    The function is:
                    easedInterpolation = rawInterpolation ^ 2 ^ -curvature

                    What this means:
                    0 -&gt; linear interpolation.
                    &gt;0 -&gt; start of transition has steeper gradient.
                    &lt;0 -&gt; end of transition has steeper gradient.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-2" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="delayAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Basic delay without feedback.

                [Tags:simple|processing|delay]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypasses the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="delayTime">
            <xsd:annotation>
                <xsd:documentation>Set the amount of time the input signal is delayed by, in seconds</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.001" />
                    <xsd:maxInclusive value="36" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="distortionAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Distort the audio signal.

                [Tags:simple|processing|distortion]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypasses the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="amount">
            <xsd:annotation>
                <xsd:documentation>Control the amount of distortion applied (gain)</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="type">
            <xsd:annotation>
                <xsd:documentation>
                    Set the type of distortion applied.

                    Type 1: waveshaping distortion
                    Type 2: doppler distortion
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="type1" />
                    <xsd:enumeration value="type2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="envelopeAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Container class for storing ControlPoint instances.

                [Tags:core]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="startTick">
            <xsd:annotation>
                <xsd:documentation>Absolute start time of the envelope measured in ticks</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="-2147483648" />
                    <xsd:maxInclusive value="2147483647" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="currentTick">
            <xsd:annotation>
                <xsd:documentation>The current tick of the controlling clock source. This is usually set by connecting Player.tick to Envelope.currentTick</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="-2147483648" />
                    <xsd:maxInclusive value="2147483647" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="envelopeFollowerAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Amplitude envelope follower.

                [Tags:simple|analysis|dynamics]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="inLevel">
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="soundLevel">
            <xsd:annotation>
                <xsd:documentation>The current level of the sound coming into the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="flangerAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                A flanger adds a signal processed by a modulated delay to the input signal. The effect is like the sound in a tunnel.

                [Tags:complex|processing|spectral|dynamics]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="modulationFrequency">
            <xsd:annotation>
                <xsd:documentation>Set the rate of the flanging applied to the sound in cycles-per-second (Hertz)</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.001" />
                    <xsd:maxInclusive value="100" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="modulationDepth">
            <xsd:annotation>
                <xsd:documentation>Set the amount of flanging applied to the sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="fluteAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Flute syntheiser based on physical modelling

                Playable via MIDI.

                [Tags:simple|synthesis]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="mute">
            <xsd:annotation>
                <xsd:documentation>
                    Mute the output of the module.

                    This will cause the module to become silent, but the module will remain active.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="gain">
            <xsd:annotation>
                <xsd:documentation>Set the gainof the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="4" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="air">
            <xsd:annotation>
                <xsd:documentation>Set the amount of air (or breath noise) played through the flute</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="10" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="clip">
            <xsd:annotation>
                <xsd:documentation>Set a limit on the overall loudness of the flute</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="power">
            <xsd:annotation>
                <xsd:documentation>Set a loudness multiplier for incoming MIDI notes</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="5" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="feedback">
            <xsd:annotation>
                <xsd:documentation>Amount of sound which is fed back from the output to the input of the flute synthesiser</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.5" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="attack">
            <xsd:annotation>
                <xsd:documentation>Attack time of the flute synthesiser in seconds (s)</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="0.2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="decay">
            <xsd:annotation>
                <xsd:documentation>Decay time of the flute synthesiser in seconds (s)</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="sustain">
            <xsd:annotation>
                <xsd:documentation>Relative sustain level of the flute synthesiser</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="release">
            <xsd:annotation>
                <xsd:documentation>Release time of the flute synthesiser in seconds (s)</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="fourByOneMixerAttributeGroup">
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="gain1">
            <xsd:annotation>
                <xsd:documentation>Set the gain of the sound coming from Audio Input 1</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="phaseInv1">
            <xsd:annotation>
                <xsd:documentation>Invert the phase of the sound from Audio Input 1</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="-1" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="gain2">
            <xsd:annotation>
                <xsd:documentation>Set the gain of the sound coming from Audio Input 2</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="phaseInv2">
            <xsd:annotation>
                <xsd:documentation>Invert the phase of the sound from Audio Input 2</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="-1" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="gain3">
            <xsd:annotation>
                <xsd:documentation>Set the gain of the sound coming from Audio Input 3</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="phaseInv3">
            <xsd:annotation>
                <xsd:documentation>Invert the phase of the sound from Audio Input 3</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="-1" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="gain4">
            <xsd:annotation>
                <xsd:documentation>Set the gain of the sound coming from Audio Input 4</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="phaseInv4">
            <xsd:annotation>
                <xsd:documentation>Invert the phase of the sound from Audio Input 4</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="-1" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="gateAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Gate module allowing the input signal to pass through to the output only if it is above the *threshold* setting

                For further information about the operation of noise gates see [here](http://en.wikipedia.org/wiki/Noise_gate).

                [Tags:simple|processing|dynamics]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>
                    Bypasses the audio processing.

                    This has the same effect as passing the signal from the audio input directly to the audio output
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Controls the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="threshold">
            <xsd:annotation>
                <xsd:documentation>
                    Set the threshold in dB

                    If the signal is above the threshold it will pass through to the output, otherwise it will be rejected
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-120" />
                    <xsd:maxInclusive value="20" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="attackTime">
            <xsd:annotation>
                <xsd:documentation>Set the attack time of the gate in milliseconds</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="10000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="releaseTime">
            <xsd:annotation>
                <xsd:documentation>Set the release time in milliseconds</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="10000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="granularDelayAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Delay and granulate the sound.

                [Tags:complex|processing|delay|granular|panning]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="delayTime">
            <xsd:annotation>
                <xsd:documentation>Control the time by which the input signal is delayed before being used as a source for granular synthesis</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.001" />
                    <xsd:maxInclusive value="36" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="delayVariation">
            <xsd:annotation>
                <xsd:documentation>Random delay time variation for each grain in milliseconds</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="grainPhase">
            <xsd:annotation>
                <xsd:documentation>Phase of grain-generating phasor</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="grainRate">
            <xsd:annotation>
                <xsd:documentation>Frequency of grain generation grains per second</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="50" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="grainLevel">
            <xsd:annotation>
                <xsd:documentation>Relative volume level of generated grains</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="grainQ">
            <xsd:annotation>
                <xsd:documentation>
                    Bandwidth of individual grains.

                    This controls the "steepness" of a raised cosine envelope applied to each grain. The effect is to make the sound of the grains "softer" (for low values of Q)  or "harder" (for high values of Q).
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="30" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="fineTune">
            <xsd:annotation>
                <xsd:documentation>
                    Controls the fine tuning of generated grains

                    A lower value will create longer, lower pitched grains, a higher value will create shorter higher pitched grains
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="100" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="levelVariation">
            <xsd:annotation>
                <xsd:documentation>Relative random grain level variation for each grain</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="0.5" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="phaseVariation">
            <xsd:annotation>
                <xsd:documentation>Random phase variation for each grain</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="0.5" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="panVariation">
            <xsd:annotation>
                <xsd:documentation>Width of panning variation either side of .5 (centre)</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="sizeVariation">
            <xsd:annotation>
                <xsd:documentation>Random grain size variation either side of the "Grain Size" setting</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="0.3" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="harmonicFilterAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                The harmonic filter is an harmonic bank filters of notch filter where the cut-off frequencies represent the harmonic series of a fundamental frequency.

                [Tags:simple|processing|filter|spectral]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypasses the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Input Level Gain</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="gain">
            <xsd:annotation>
                <xsd:documentation>Output Level Gain</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="4" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Controls the relative mix of processed/unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="frequency">
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="q">
            <xsd:annotation>
                <xsd:documentation>Q is ratio of bandwidth over centre frequency</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.01" />
                    <xsd:maxInclusive value="10" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="first">
            <xsd:annotation>
                <xsd:documentation>Enable the filtering of the first harmonic.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="second">
            <xsd:annotation>
                <xsd:documentation>Enable the filtering of the second harmonic.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="third">
            <xsd:annotation>
                <xsd:documentation>Enable the filtering of the third harmonic.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="fourth">
            <xsd:annotation>
                <xsd:documentation>Enable the filtering of the fourth harmonic.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="fifth">
            <xsd:annotation>
                <xsd:documentation>Enable the filtering of the fifth harmonic.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="sixth">
            <xsd:annotation>
                <xsd:documentation>Enable the filtering of the sixth harmonic.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="seventh">
            <xsd:annotation>
                <xsd:documentation>Enable the filtering of the seventh harmonic.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="eighth">
            <xsd:annotation>
                <xsd:documentation>Enable the filtering of the eigth harmonic.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="nineth">
            <xsd:annotation>
                <xsd:documentation>Enable the filtering of the nineth harmonic.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="tenth">
            <xsd:annotation>
                <xsd:documentation>Enable the filtering of the tenth harmonic.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="eleventh">
            <xsd:annotation>
                <xsd:documentation>Enable the filtering of the eleventh harmonic.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="twelfth">
            <xsd:annotation>
                <xsd:documentation>Enable the filtering of the twelfth harmonic.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="thirteenth">
            <xsd:annotation>
                <xsd:documentation>Enable the filtering of the thirteenth harmonic.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="fourteenth">
            <xsd:annotation>
                <xsd:documentation>Enable the filtering of the fourteenth harmonic.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="fifteenth">
            <xsd:annotation>
                <xsd:documentation>Enable the filtering of the fifteenth harmonic.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="sixteenth">
            <xsd:annotation>
                <xsd:documentation>Enable the filtering of the sexteenth harmonic.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="highPassAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Filter module allowing only frequencies above a given threshold to pass through to the output.

                [Tags:simple|processing|filter]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="frequency">
            <xsd:annotation>
                <xsd:documentation>Set the cutoff frequency of the filter in Hertz</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="limiterAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Limiter with Hard Knee, Attack Time, Release Time, Threshold, Makeup Gain.

                The second audio output provides a copy of the side chain signal.

                Look Ahead Time is automatically set to 33% of the Attack Time.

                For further information about the operation of Limiters see [here](http://en.wikipedia.org/wiki/Dynamic_range_compression).

                [Tags:simple|processing|dynamics]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="attackTime">
            <xsd:annotation>
                <xsd:documentation>Set the attack time of the limiter in milliseconds</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="33" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="makeUp">
            <xsd:annotation>
                <xsd:documentation>
                    Set the makeup gain of the limiter in decibels (dB)

                    This sets the amount of increase in volume level after limiting has been applied
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-100" />
                    <xsd:maxInclusive value="100" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="releaseTime">
            <xsd:annotation>
                <xsd:documentation>Set the release time of the limiter in milliseconds</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="10000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="threshold">
            <xsd:annotation>
                <xsd:documentation>Set the threshold in decibels (dB) above which limiting is applied</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-100" />
                    <xsd:maxInclusive value="0" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="lowPassAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Filter module allowing only frequencies below a given threshold to pass through to the output.

                [Tags:simple|processing|filter]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="frequency">
            <xsd:annotation>
                <xsd:documentation>Set the cutoff frequency of the filter in Hertz (Hz)</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="materialSimulatorAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                A filter, which imposes the formant characteristics of various materials on the input sound.

                [Tags:complex|processing|spectral|resonance]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="material">
            <xsd:annotation>
                <xsd:documentation>Set the material, which defines the sonic characteristics to be imposed on the audio input</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="cardboard" />
                    <xsd:enumeration value="wood" />
                    <xsd:enumeration value="plastic" />
                    <xsd:enumeration value="china" />
                    <xsd:enumeration value="glass1" />
                    <xsd:enumeration value="glass2" />
                    <xsd:enumeration value="metal" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="midiCCoutTestAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                A module for testing cc out.

                [Tags:synthesis]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="mute">
            <xsd:annotation>
                <xsd:documentation>
                    Mute the output of the module.

                    This will cause the module to become silent, but the module will remain active.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="4" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turn module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="channel">
            <xsd:annotation>
                <xsd:documentation>Set the MIDI channel</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="16" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="cc">
            <xsd:annotation>
                <xsd:documentation>The MIDI CC Number</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="127" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="value">
            <xsd:annotation>
                <xsd:documentation>The MIDI CC Value</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="127" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="pitchBend">
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-8192" />
                    <xsd:maxInclusive value="8191" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="midiControlInputAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Listens for control change or note on messages on specified device, channel, and cc number/note.

                [Tags:core]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="device">
            <xsd:annotation>
                <xsd:documentation>
                    The midi input device to which this module will respond.

                    The special value "Any Device" instructs the module to respond to all active midi input devices
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="channel">
            <xsd:annotation>
                <xsd:documentation>
                    The midi channel on which this module will respond, as an index from 1 to 16.

                    The value 0 has a special meaning - it instructs the module to respond to incoming messages on any channel.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="16" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="messageType">
            <xsd:annotation>
                <xsd:documentation>Enumeration of 'noteon' and 'cc'.  Tells the module which type of midi input to listen to.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="cc" />
                    <xsd:enumeration value="noteon" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="noteOrController">
            <xsd:annotation>
                <xsd:documentation>
                    Tells the module which midi input message to listen for.

                    The meaning of 'noteOrController' depends on whether messageType is set to 'noteon' or 'cc'.

                    When noteon, noteOrController is the midi note to listen for.

                    When cc, noteOrController is the cc number to listen for
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="127" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="midiRawInputAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                This module passes midi messages directly from all active midi input devices.

                [Tags:core]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="midiSettingsAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                manages MIDI setup (selecting valid backends, such as ALSA or PortMidi, and then selecting available devices).

                [Tags:core]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="activeInputDevices" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The set of Midi input devices which are currently open.

                    Represented as a list concatenated into a single string, with each element prepended by its length and a colon

                    Example:
                    "First Item", "Second Item" would be represented as
                    10:First Item11:Second Item
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="activeOutputDevices" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The set of Midi output devices which are currently open.

                    Represented as a list concatenated into a single string, with each element prepended by its length and a colon

                    Example:
                    "First Item", "Second Item" would be represented as
                    10:First Item11:Second Item
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="midiStuffTestAttributeGroup">
        <xsd:attribute name="mute">
            <xsd:annotation>
                <xsd:documentation>
                    Mute the output of the module.

                    This will cause the module to become silent, but the module will remain active.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="4" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turn module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="multiBandCompressorAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                A four band compressor where you can to set each band limit, exept the first setted at 20 Hz and the last at 20 kHz.
                Each band may be compressed by a compressor wher you can set the input and output gain and the compression level.

                [Tags:simple|processing|dynamics|filter]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypasses the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="bandLimit1">
            <xsd:annotation>
                <xsd:documentation>Set the band limit between the first and the second band in Hz.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="250" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="bandLimit2">
            <xsd:annotation>
                <xsd:documentation>Set the band limit between the second and the third band in Hz.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="250" />
                    <xsd:maxInclusive value="2500" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="bandLimit3">
            <xsd:annotation>
                <xsd:documentation>Set the band limit between the thirs and the fourth band in Hz.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="2500" />
                    <xsd:maxInclusive value="20000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="cIn1">
            <xsd:annotation>
                <xsd:documentation>Set the input gain of the first band to be compressed</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="cOut1">
            <xsd:annotation>
                <xsd:documentation>Set the output gain of first compressed band</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="4" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="cIn2">
            <xsd:annotation>
                <xsd:documentation>Set the input gain of the second band to be compressed</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="cOut2">
            <xsd:annotation>
                <xsd:documentation>Set the output gain of second compressed band</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="4" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="cIn3">
            <xsd:annotation>
                <xsd:documentation>Set the input gain of the third band to be compressed</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="cOut3">
            <xsd:annotation>
                <xsd:documentation>Set the output gain of third compressed band</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="4" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="cIn4">
            <xsd:annotation>
                <xsd:documentation>Set the input gain of the fourth band to be compressed</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="cOut4">
            <xsd:annotation>
                <xsd:documentation>Set the output gain of fourth compressed band</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="4" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="t1">
            <xsd:annotation>
                <xsd:documentation>Set the compressor threshold of the first band in dB</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-120" />
                    <xsd:maxInclusive value="20" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="t2">
            <xsd:annotation>
                <xsd:documentation>Set the compressor threshold of the second band in dB</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-120" />
                    <xsd:maxInclusive value="20" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="t3">
            <xsd:annotation>
                <xsd:documentation>Set the compressor threshold of the third band in dB</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-120" />
                    <xsd:maxInclusive value="20" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="t4">
            <xsd:annotation>
                <xsd:documentation>Set the compressor threshold of the fourth band in dB</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-120" />
                    <xsd:maxInclusive value="20" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="r1">
            <xsd:annotation>
                <xsd:documentation>Set the compression ratio of the first band</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="10" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="r2">
            <xsd:annotation>
                <xsd:documentation>Set the compression ratio of the second band</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="10" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="r3">
            <xsd:annotation>
                <xsd:documentation>Set the compression ratio of the third band</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="10" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="r4">
            <xsd:annotation>
                <xsd:documentation>Set the compression ratio of the fourth band</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="10" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="noisinessAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Detect and display the noiseless of the incoming audio signal with a value between 0 and 127. When the value is 127 the incoming sound is very noisy when is 0 it isn't.

                [Tags:simple|analysis|spectral]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="noisiness">
            <xsd:annotation>
                <xsd:documentation>Display the noisiness of the incoming audio signal with a value between 0 and 1.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="notchAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Band Stop filter of second order with Q.

                [Tags:simple|processing|filter|resonance]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypasses the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Input Level Gain</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Output Level Gain</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Controls the relative mix of processed/unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="frequency">
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="q">
            <xsd:annotation>
                <xsd:documentation>Q is ratio of bandwidth over centre frequency</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.01" />
                    <xsd:maxInclusive value="10" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="octoSoundfilerAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Play and records octo soundfiles.

                [Tags:simple|soundfile|synthesis]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="mute">
            <xsd:annotation>
                <xsd:documentation>Mute the output of the soundfiler</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="load">
            <xsd:annotation>
                <xsd:documentation>Loads an audio file into the Soundfiler</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="record">
            <xsd:annotation>
                <xsd:documentation>Start and stop recording</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="play">
            <xsd:annotation>
                <xsd:documentation>Start and pause playback</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="loop">
            <xsd:annotation>
                <xsd:documentation>Toggle looping</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="speed">
            <xsd:annotation>
                <xsd:documentation>
                    Set playback speed

                    This is set as a ratio to the base soundfile speed, so a value of 2 means twice the speed and .5 means half the speed
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="10" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="position">
            <xsd:annotation>
                <xsd:documentation>Show and set the relative playback  position</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="gain">
            <xsd:annotation>
                <xsd:documentation>Set the gain</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="4" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="onsetDetectorAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Onset detector optimised for pitched sounds

                Onset refers to the beginning of a musical note or other sound, in which the amplitude rises from zero to an initial peak (Source: [Wikipedia](http://en.wikipedia.org/wiki/Onset_(audio)).

                [Tags:simple|analysis|dynamics|pitch]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="onset">
            <xsd:annotation>
                <xsd:documentation>Show the relative level of any detected onset</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="100" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="partialAnalyserAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Extract the amplitude (in absolute value from 0 to 1) and the frequency (in Hz) of the first ten relevant partials of the input signal.

                [Tags:simple|analysis]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="gain">
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="4" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="a1">
            <xsd:annotation>
                <xsd:documentation>Displays the detected amplitude of the first relevant partial expressed in absolute value between 0 and 1.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="f1">
            <xsd:annotation>
                <xsd:documentation>Displays the detected frequency of the first relevant partial expressed in Hz.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20050" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="f2">
            <xsd:annotation>
                <xsd:documentation>Displays the detected frequency of the second relevant partial expressed in Hz.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20050" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="a2">
            <xsd:annotation>
                <xsd:documentation>Displays the detected amplitude of the second relevant partial expressed in absolute value between 0 and 1.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="f3">
            <xsd:annotation>
                <xsd:documentation>Displays the detected frequency of the third relevant partial expressed in Hz.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20050" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="a3">
            <xsd:annotation>
                <xsd:documentation>Displays the detected amplitude of the third relevant partial expressed in absolute value between 0 and 1.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="f4">
            <xsd:annotation>
                <xsd:documentation>Displays the detected frequency of the fourth relevant partial expressed in Hz.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20050" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="a4">
            <xsd:annotation>
                <xsd:documentation>Displays the detected amplitude of the fourth relevant partial expressed in absolute value between 0 and 1.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="f5">
            <xsd:annotation>
                <xsd:documentation>Displays the detected frequency of the eighth relevant partial expressed in Hz.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20050" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="a5">
            <xsd:annotation>
                <xsd:documentation>Displays the detected amplitude of the fifth relevant partial expressed in absolute value between 0 and 1.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="f6">
            <xsd:annotation>
                <xsd:documentation>Displays the detected frequency of the sixth relevant partial expressed in Hz.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20050" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="a6">
            <xsd:annotation>
                <xsd:documentation>Displays the detected amplitude of the sixth relevant partial expressed in absolute value between 0 and 1.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="f7">
            <xsd:annotation>
                <xsd:documentation>Displays the detected frequency of the seventh relevant partial expressed in Hz.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20050" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="a7">
            <xsd:annotation>
                <xsd:documentation>Displays the detected amplitude of the seventh relevant partial expressed in absolute value between 0 and 1.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="f8">
            <xsd:annotation>
                <xsd:documentation>Displays the detected frequency of the eighth relevant partial expressed in Hz.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20050" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="a8">
            <xsd:annotation>
                <xsd:documentation>Displays the detected amplitude of the eighth relevant partial expressed in absolute value between 0 and 1.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="f9">
            <xsd:annotation>
                <xsd:documentation>Displays the detected frequency of the ninth relevant partial expressed in Hz.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20050" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="a9">
            <xsd:annotation>
                <xsd:documentation>Displays the detected amplitude of the nineth relevant partial expressed in absolute value between 0 and 1.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="f10">
            <xsd:annotation>
                <xsd:documentation>Displays the detected frequency of the tenth relevant partial expressed in Hz.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20050" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="a10">
            <xsd:annotation>
                <xsd:documentation>Displays the detected amplitude of the tenth relevant partial expressed in absolute value between 0 and 1.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="perceptualLoudnessAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Detect and display the perceptual loudness and intensity level measured in dBA.

                [Tags:simple|analysis]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="loudness">
            <xsd:annotation>
                <xsd:documentation>Displays the detected perceptual Loudness level in dbA.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="120" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="intensity">
            <xsd:annotation>
                <xsd:documentation>Displays the detected intensity level in dbA.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="120" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="intensityY">
            <xsd:annotation>
                <xsd:documentation>Displays the detected intensity level.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="120" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="loudnessS">
            <xsd:annotation>
                <xsd:documentation>Displays the detected perceptual Loudness level.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="120" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="percussiveOnsetDetectorAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Onset detector optimised for percussive sounds

                Onset refers to the beginning of a musical note or other sound, in which the amplitude rises from zero to an initial peak (Source: [Wikipedia](http://en.wikipedia.org/wiki/Onset_(audio&amp;#41;)).

                [Tags:simple|analysis|dynamics]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="onset">
            <xsd:annotation>
                <xsd:documentation>Show the relative level of any detected onset</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="100" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="phaserAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                A phaser adds a signal processed by a modulated allpass chain to the input signal. The effect is like the sound in a tunnel.

                [Tags:complex|processing|spectral|dynamics]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="modulationFrequency">
            <xsd:annotation>
                <xsd:documentation>Set the rate of the phasing applied to the sound in cycles-per-second (Hertz)</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.001" />
                    <xsd:maxInclusive value="100" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="modulationDepth">
            <xsd:annotation>
                <xsd:documentation>Set the amount of phasing applied to the sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="phaseVocoderAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Provides the ability to scrub through an audio file or recorded sound and alter its pitch or playback position dynamically.

                [Tags:complex|processing|filter|dynamics|soundfile|spectral]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="loadSound">
            <xsd:annotation>
                <xsd:documentation>Set the sound to be loaded for phase vocoding</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="recSound">
            <xsd:annotation>
                <xsd:documentation>Record a sound into the module for live manipulation</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:enumeration value="0" />
                    <xsd:enumeration value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="recLength">
            <xsd:annotation>
                <xsd:documentation>Set the length of audio to be recorded in seconds (s)</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="90" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="relPosition">
            <xsd:annotation>
                <xsd:documentation>Set the relative scrub position within the loaded or recorded sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="pitchTransposition">
            <xsd:annotation>
                <xsd:documentation>Set the pitch transposition in cents of the recorded or loaded sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-2400" />
                    <xsd:maxInclusive value="2400" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="pianoReverbMSPAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Spectral Piano Reverb, based on Miller Puckette's Phase Vocoder reverb.

                [Tags:processing|complex|spectral|delay]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="fftSize">
            <xsd:annotation>
                <xsd:documentation>
                    Set the size of the FFT window used to perform the reverb

                    Setting a larger size will result in better frequency resolution in the reverb response

                    Setting a smaller size will result in better time resolution in the reverb response
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:enumeration value="512" />
                    <xsd:enumeration value="1024" />
                    <xsd:enumeration value="2048" />
                    <xsd:enumeration value="4096" />
                    <xsd:enumeration value="8192" />
                    <xsd:enumeration value="16384" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="reverbTime">
            <xsd:annotation>
                <xsd:documentation>This is the (T20) Reverb Decay Time in Seconds (s).</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="100" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="pianoReverbStringsAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                A Piano Reverb with 88 String Resonators using a string physical model.

                [Tags:complex|processing|reverb|delay]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="pingPongDelayAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                1-in-2-out ping pong delay with bandpass filters in the feedback path.

                [Tags:simple|processing|delay|panning]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="delayTime">
            <xsd:annotation>
                <xsd:documentation>Set the amount of time the input signal is delayed by, in seconds</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.001" />
                    <xsd:maxInclusive value="36" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="ratioOne">
            <xsd:annotation>
                <xsd:documentation>Ratio of the delay time for Output 1 to the base delay time</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="30" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="ratioTwo">
            <xsd:annotation>
                <xsd:documentation>Ratio of the delay time for Output 2 to the base delay time</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="30" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="feedback">
            <xsd:annotation>
                <xsd:documentation>Set the amount of the output signal that is fed back to the input of the delay</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="frequency">
            <xsd:annotation>
                <xsd:documentation>Set the cutoff frequency in Hertz (Hz) of the lowpass filter, which filters the signal fed back from the delay output to the delay input</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="22050" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="q">
            <xsd:annotation>
                <xsd:documentation>
                    Set the "width" of the band pass filter which filters the signal fed back from the delay output to the delay input

                    In technical terms, this sets the filter bandwidth in constant ratio to the centre frequency
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.001" />
                    <xsd:maxInclusive value="100" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="pitchDetectorAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Detect and display the pitch of the incoming sound.

                [Tags:simple|analysis]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="pitch">
            <xsd:annotation>
                <xsd:documentation>Displays the detected pitch in MIDI cents</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="12700" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="pitchShifterAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Transposes the pitch of sounds in a harmonic way.

                [Tags:simple|processing|pitch]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="pitch">
            <xsd:annotation>
                <xsd:documentation>
                    Set the amount by which the pitch of the sound is transposed by in MIDI cents

                    For example a Pitch value of 1200 will transpose the sound up by 12 semitones (1 octave)
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-2400" />
                    <xsd:maxInclusive value="2400" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="windowSize">
            <xsd:annotation>
                <xsd:documentation>
                    Set window size in seconds (s) used by the pitch shifter

                    A smaller window size will make the Pitch Shifter more responsive, but less able to deal with low frequencies
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.001" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="playerAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Integra clock source.

                [Tags:core]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="tick">
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="-1" />
                    <xsd:maxInclusive value="1000000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="rate">
            <xsd:annotation>
                <xsd:documentation>Clock rate in ticks per second</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="scene">
            <xsd:annotation>
                <xsd:documentation>
                    The instance name of the currently selected scene

                    NOTE: this transparently gets converted to an integer id on the host side
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="loop">
            <xsd:annotation>
                <xsd:documentation>Boolean to determine whether the player loops or not</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="end">
            <xsd:annotation>
                <xsd:documentation>Loop end point in ticks</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="-1" />
                    <xsd:maxInclusive value="10000000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="play">
            <xsd:annotation>
                <xsd:documentation>Start or stop the player</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="start">
            <xsd:annotation>
                <xsd:documentation>Loop start point in ticks</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="-1" />
                    <xsd:maxInclusive value="10000000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="pluckedStringAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Plucked string synthesiser using the Karplus-Strong technique.

                [Tags:complex|synthesis|resonance]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="mute">
            <xsd:annotation>
                <xsd:documentation>Mute the output of the module. This will cause the module to become silent, but the module will remain active</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="gain">
            <xsd:annotation>
                <xsd:documentation>Set the gain of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="4" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="chNumber">
            <xsd:annotation>
                <xsd:documentation>
                    Set the MIDI receive channel number between 1 and 16

                    0 means receive on all channels
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="16" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="decay">
            <xsd:annotation>
                <xsd:documentation>
                    Set the approximate decay time

                    This isn't a precise setting since the value of the "filter" parameter also affects the actual decay time
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="filter">
            <xsd:annotation>
                <xsd:documentation>Set the frequency in Hertz (Hz) of the  low-pass filter used in the synthesis process</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="20000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="quadAudioInAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                4 channel audio input.

                [Tags:input|simple]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="startChannel">
            <xsd:annotation>
                <xsd:documentation>
                    Set input channel on the audio interface.

                    An offset of "2" will mean that the AudioIn module uses audio from channel 2 on the audio interface.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="24" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="quadAudioOutAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                4 channel audio output.

                [Tags:simple|output]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="startChannel">
            <xsd:annotation>
                <xsd:documentation>
                    Set input channel on the audio interface.

                    An offset of "2" will mean that the AudioIn module uses audio from channel 2 on the audio interface.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="24" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="quadAutoPannerAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Automatically pans the input sound in a circular pattern to the module outputs

                The panner assumes that speakers are placed in a circular layout as follows:

                &gt; **out1** : back-left
                &gt; **out2** : front-left
                &gt; **out3** : front-right
                &gt; **out4** : back-right.

                [Tags:simple|processing|panning|dynamics]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="auto">
            <xsd:annotation>
                <xsd:documentation>Switch the automatic panning rotation ON or OFF</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="rate">
            <xsd:annotation>
                <xsd:documentation>Set the rate of rotation in cycles-per-second (Hz)</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-10" />
                    <xsd:maxInclusive value="10" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="panning">
            <xsd:annotation>
                <xsd:documentation>
                    Manually set the pan position

                    This parameter also controls the position the panner is set to when "Reset Auto" is clicked

                    Position 0 corresponds to "front-center", +/- 180 corresponds to "back-center"
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-180" />
                    <xsd:maxInclusive value="180" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="pos">
            <xsd:annotation>
                <xsd:documentation>Display the current position between -180 and +180 degrees</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-180" />
                    <xsd:maxInclusive value="180" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="quadGranularSynthesizerAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Perform granular synthesis and quadraphonic spatialisation using an audio buffer.

                The buffer can be filled by loading a soundfile or by recording audio in live from the Audio Input.

                [Tags:complex|processing|granular]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="loadSound">
            <xsd:annotation>
                <xsd:documentation>Set the sound to be loaded into the  granular synthesizer to be used as a source for synthesis</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="recSound">
            <xsd:annotation>
                <xsd:documentation>Record live sound from the module Audio Input into the granular synthesizer to be used as a source for synthesis</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="recLength">
            <xsd:annotation>
                <xsd:documentation>
                    Set the length of the audio buffer, used by the Record Sound function

                    This controls the length of the live audio buffer used for granular synthesis
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="90" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="nrOfPositionQuants">
            <xsd:annotation>
                <xsd:documentation>
                    This is the number of discrete steps between Minimum Cloud Position and Maximum Cloud Position

                    Grain spatialisation locations will be locked to these pan locations

                    A setting of zero means an infinite number of posssible grain locations between Minimum Cloud Position and Maximum Cloud Position
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1000000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="maxNrGrains">
            <xsd:annotation>
                <xsd:documentation>
                    Set the maximum number of grain generators.

                    This is effectively a "grain polyphony" setting, controlling the maximum number of grains that can be overlapping at any one time
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="40" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="attackTime">
            <xsd:annotation>
                <xsd:documentation>Relative attack time of grain envelope as a percentage (%) of the overall grain length</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="50" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="releaseTime">
            <xsd:annotation>
                <xsd:documentation>Relative release time of grain envelope as a percentage (%) of the overall grain length</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="50" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="maxGrainSize">
            <xsd:annotation>
                <xsd:documentation>
                    This is the maximum possible grain length in seconds (s)

                    Grain sizes are generated randomly between the values set in "Maximum Grain Size" and "Minimum Grain Size"
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.001" />
                    <xsd:maxInclusive value="100" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="maxPitchTransposition">
            <xsd:annotation>
                <xsd:documentation>
                    This is the maximum possible grain pitch transposition in cents

                    Grain pitches are generated randomly between the values set in "Maximum Pitch Transposition" and "Minimum Pitch Transposition"
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-2400" />
                    <xsd:maxInclusive value="2400" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="minGrainSize">
            <xsd:annotation>
                <xsd:documentation>
                    This is the minimum possible grain length in seconds (s)

                    Grain sizes are generated randomly between the values set in "Maximum Grain Size" and "Minimum Grain Size"
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.001" />
                    <xsd:maxInclusive value="100" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="minPitchTransposition">
            <xsd:annotation>
                <xsd:documentation>
                    This is the minimum possible grain pitch transposition in cents

                    Grain pitches are generated randomly between the values set in "Maximum Pitch Transposition" and "Minimum Pitch Transposition"
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-2400" />
                    <xsd:maxInclusive value="2400" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="maxCloudDensity">
            <xsd:annotation>
                <xsd:documentation>This is the maximum number of randomly generated grains you can hear at the same time</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="40" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="maxSpatialPosition">
            <xsd:annotation>
                <xsd:documentation>
                    This is the maximum spatial position for grain placement

                    Grains are positioned randomly at positions between Minimum Spatial Position and Maximum Spatial Position on a grid defined by the Number of Position Locations parameter
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="minCloudDensity">
            <xsd:annotation>
                <xsd:documentation>This is the minimum number of randomly generated grains you can hear at the same time</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="40" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="minSpatialPosition">
            <xsd:annotation>
                <xsd:documentation>
                    This is the minimum spatial position for grain placement

                    Grains are positioned randomly at positions between Minimum Spatial Position and Maximum Spatial Position on a grid defined by the Number of Position Locations parameter
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="devCloudPosition">
            <xsd:annotation>
                <xsd:documentation>
                    This is the maximum deviation of a randomly chosen grain in relation to the audio buffer

                    A higher value for Cloud Position Deviation will result in variation in the audio buffer locations used for granular synthesis
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="10" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="relMeanCloudPosition">
            <xsd:annotation>
                <xsd:documentation>
                    This is the relative mean value of a randomly chosen grain position out of the audio buffer

                    This parameter controls *where* in the audio buffer the highest number of grains will be taken from

                    Lower values will result in more grains being taken from the beginning of the audio buffer, higher values will result in more grains being taken from the end
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="quadPannerAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Takes a monophonic input and pans amongst 4 channels

                The panner assumes that speakers are placed in a circular layout as follows:

                &gt; **out1** : back-left
                &gt; **out2** : front-left
                &gt; **out3** : front-right
                &gt; **out4** : back-right.

                [Tags:simple|processing|panning]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="panning">
            <xsd:annotation>
                <xsd:documentation>
                    Set the pan position in degrees

                    Position 0 corresponds to "front-center", +/- 180 corresponds to "back-center"
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-180" />
                    <xsd:maxInclusive value="180" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="quadSoundFilerAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Play and records quad soundfiles.

                [Tags:simple|soundfile|synthesis]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="mute">
            <xsd:annotation>
                <xsd:documentation>Mute the output of the soundfiler</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="load">
            <xsd:annotation>
                <xsd:documentation>Load an audio file into the Soundfiler</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="record">
            <xsd:annotation>
                <xsd:documentation>Start and stop recording</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="play">
            <xsd:annotation>
                <xsd:documentation>Start and pause playback</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="loop">
            <xsd:annotation>
                <xsd:documentation>Toggle looping</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="speed">
            <xsd:annotation>
                <xsd:documentation>
                    Set playback speed

                    This is set as a ratio to the base soundfile speed, so a value of 2 means twice the speed and .5 means half the speed
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="10" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="position">
            <xsd:annotation>
                <xsd:documentation>Show and set the relative playback  position</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="gain">
            <xsd:annotation>
                <xsd:documentation>Set the gain</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="4" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="quadXYPannerAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Pan the sound by specifying an X-Y position

                The panner assumes that speakers are placed in a row layout as follows:

                &gt; **out1** : front-left
                &gt; **out2** : front-right
                &gt; **out3** : back-left
                &gt; **out4** : back-right.

                [Tags:simple|processing|panning]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="xPosition">
            <xsd:annotation>
                <xsd:documentation>
                    Set the x-position of the panned sound

                    0 corresponds to pan left, 1 corresponds to pan right
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="yPosition">
            <xsd:annotation>
                <xsd:documentation>
                    Set the y-position of the panned sound

                    0 corresponds to pan front 1 corresponds to pan back
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="resonantBandPassAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Filter module with resonance applied to a specific band of frequencies.

                [Tags:simple|processing|filter|resonance]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="frequency">
            <xsd:annotation>
                <xsd:documentation>Set the centre frequency of the filter in Hertz (Hz)</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="q">
            <xsd:annotation>
                <xsd:documentation>
                    Set the "width" of the band pass filter

                    In technical terms, this sets the filter band width in constant ratio to the centre frequency.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.001" />
                    <xsd:maxInclusive value="1000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="normalisation">
            <xsd:annotation>
                <xsd:documentation>
                    **peak** : this setting normalises the output of the filter to the peak amplitude of the input

                    **power** : this setting normalises the output of the filter to the power level (peak squared) of the input

                    Selecting "power" will result in a more "agressive", less stable filter
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="peak" />
                    <xsd:enumeration value="power" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="resonantLowPassAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Filter module with resonance applied to frequencies below a certain threshold.

                [Tags:simple|processing|filter|resonance]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="frequency">
            <xsd:annotation>
                <xsd:documentation>Set the cutoff frequency of the filter in Hertz (Hz)</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="q">
            <xsd:annotation>
                <xsd:documentation>
                    Set the "width" of the resonant peak

                    In technical terms, this sets the   width of the resonant peak in constant ratio to the cutoff frequency.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.001" />
                    <xsd:maxInclusive value="1000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="reverbAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Mono Reverb based on a Feedback Delay Network 12th order using a room simulation model.

                [Tags:complex|processing|reverb|spectral|delay]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="decayTimeHigh">
            <xsd:annotation>
                <xsd:documentation>
                    Set the relative reverb time of the high frequency components in the sound

                    This is the T60 decay time of the highest frequency band 4000..16000 Hertz (Hz) of the reverb
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="1000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="decayTimeLow">
            <xsd:annotation>
                <xsd:documentation>
                    Set the relative reverb time of the low frequency components in the sound

                    This is the T60 decay time of the lowest frequency band 0.1..1000 Hertz (Hz) of the reverb
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="1000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="decayTimeMid">
            <xsd:annotation>
                <xsd:documentation>
                    Set the relative reverb time of the mid frequency components in the sound

                    This is the T60 decay time of the 3rd frequency band 250..1000 Hertz (Hz) of the reverb
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="1000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="decayTimeMidHigh">
            <xsd:annotation>
                <xsd:documentation>
                    Set the relative reverb time of the Mid-High frequency components in the sound

                    This is the T60 decay time of the 4th frequency band 1000..4000 Hertz (Hz) of the reverb
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="1000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="decayTimeMidLow">
            <xsd:annotation>
                <xsd:documentation>
                    Set the relative reverb time of the mid-low frequency components in the sound

                    This is the T60 decay time of the 2nd frequency band 62..250 Hertz (Hz) of the reverb
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="1000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="roomVolume">
            <xsd:annotation>
                <xsd:documentation>
                    Set the volume of the room in cubic metres (m^3)

                    Volume is length * width * height
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="8" />
                    <xsd:maxInclusive value="100000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="earlyLateBalance">
            <xsd:annotation>
                <xsd:documentation>
                    Set the ratio between "early reflections" (echo) and "late diffusion" (reverberation)

                    A value of 0 causes only early reflections to be heard, a value of 1 causes only reverberation to be heard
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="sourceDistance">
            <xsd:annotation>
                <xsd:documentation>Set the relative distance of the listener to the signal source in the virtual space</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="roomShape">
            <xsd:annotation>
                <xsd:documentation>
                    Set the shape of the virtual space

                    A value of 0 gives a more cubic space, a value of 1 gives a more elongated space
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="ringModulatorAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Ring Modulator capable of amplitude modulation or classic ring modulation

                It sounds like an old valve radio with bad reception.

                [Tags:complex|processing|dynamics]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="lfoShape">
            <xsd:annotation>
                <xsd:documentation>
                    Set the shape of the low frequency oscillator (LFO) used to modulate the frequency of the modulator signal

                    **sine** will use a sine wave LFO
                    **square** will use a square wave LFO
                    **in2** will use Audio Input 2 as an LFO
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="sine" />
                    <xsd:enumeration value="square" />
                    <xsd:enumeration value="in2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="lfoAmount">
            <xsd:annotation>
                <xsd:documentation>Set the amount of low frequency oscillation applied to the modulator signal</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="lfoRate">
            <xsd:annotation>
                <xsd:documentation>
                    Set the rate of the LFO in Hertz (Hz)

                    This parameter only effects LFO Shape of **sine** or **square**
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.001" />
                    <xsd:maxInclusive value="100" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="modulationFrequency">
            <xsd:annotation>
                <xsd:documentation>Mean frequency of modulation in Hertz (Hz)</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="10000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="modulationDrive">
            <xsd:annotation>
                <xsd:documentation>Amplitude of modulation</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="scalerAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Control processing module for scaling from an input range to an output range.

                [Tags:core]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="inValue">
            <xsd:annotation>
                <xsd:documentation>The value which is scaled in order to produce an output value</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-2147483648" />
                    <xsd:maxInclusive value="2147483647" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inRangeMin">
            <xsd:annotation>
                <xsd:documentation>Together with InRangeMax, defines the limits of the scaler's input range</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-2147483648" />
                    <xsd:maxInclusive value="2147483647" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inRangeMax">
            <xsd:annotation>
                <xsd:documentation>Together with InRangeMin, defines the limits of the scaler's input range</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-2147483648" />
                    <xsd:maxInclusive value="2147483647" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inScale">
            <xsd:annotation>
                <xsd:documentation>
                    Allows for nonlinear input scaling, for when a scaler's input source has a nonlinear relationship between value and perceptual linearity.

                    For example, if a scaler's input source is a vu meter, represented in decibels, it would probably be desirable to set inScale to 'decibel'
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="decibel" />
                    <xsd:enumeration value="exponential" />
                    <xsd:enumeration value="linear" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inMode">
            <xsd:annotation>
                <xsd:documentation>
                    Enumeration of ['snap', 'ignore'].

                    Specifies how the Scaler should respond on receipt of input values outside of the specified Input Range.

                    'snap' means an output value should be determined from the closest legal input value.

                    'ignore' means the Scaler should do nothing when out-of-range input is received.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="ignore" />
                    <xsd:enumeration value="snap" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outRangeMin">
            <xsd:annotation>
                <xsd:documentation>Together with OutRangeMax, defines the limits of the scaler's output range</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-2147483648" />
                    <xsd:maxInclusive value="2147483647" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outRangeMax">
            <xsd:annotation>
                <xsd:documentation>Together with OutRangeMin, defines the limits of the scaler's output range</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-2147483648" />
                    <xsd:maxInclusive value="2147483647" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outScale">
            <xsd:annotation>
                <xsd:documentation>
                    Allows for nonlinear output scaling, for when a scaler's output target has a nonlinear relationship between value and perceptual linearity.

                    For example, if a scaler's output target is a filter's curoff frequency, represented in hz, it would probably be desirable to set outScale to 'exponential'
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="decibel" />
                    <xsd:enumeration value="exponential" />
                    <xsd:enumeration value="linear" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="sceneAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                None.

                [Tags:core]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="userData">
            <xsd:annotation>
                <xsd:documentation>Arbitrary data associated with a class instance</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mode">
            <xsd:annotation>
                <xsd:documentation>The scene playback mode</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="hold" />
                    <xsd:enumeration value="play" />
                    <xsd:enumeration value="loop" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="start">
            <xsd:annotation>
                <xsd:documentation>Scene start tick</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="-2147483648" />
                    <xsd:maxInclusive value="2147483647" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="length">
            <xsd:annotation>
                <xsd:documentation>Scene length in ticks</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="-2147483648" />
                    <xsd:maxInclusive value="2147483647" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="info">
            <xsd:annotation>
                <xsd:documentation>
                    Used to store user-generated documentaion.

                    By convention, this documentation
                    should use markdown notation
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="scriptAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Class for running Integra script.

                [Tags:core]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="text">
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="soundfilerAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Play and records mono soundfiles.

                [Tags:simple|soundfile|synthesis]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="mute">
            <xsd:annotation>
                <xsd:documentation>Mute the output of the soundfiler</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="load">
            <xsd:annotation>
                <xsd:documentation>Loads an audio file into the Soundfiler</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="record">
            <xsd:annotation>
                <xsd:documentation>Start and stop recording</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="play">
            <xsd:annotation>
                <xsd:documentation>Start and pause playback</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="loop">
            <xsd:annotation>
                <xsd:documentation>Toggle looping</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="speed">
            <xsd:annotation>
                <xsd:documentation>
                    Set playback speed

                    This is set as a ratio to the base soundfile speed, so a value of 2 means twice the speed and .5 means half the speed
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="10" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="position">
            <xsd:annotation>
                <xsd:documentation>Show and set the relative playback  position</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="gain">
            <xsd:annotation>
                <xsd:documentation>Set the gain</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="4" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set input the level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="sPATAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                The SPAT is simple spatializer.

                [Tags:simple|processing|panning]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="xPosition">
            <xsd:annotation>
                <xsd:documentation>
                    Set the x-position of the panned sound

                    0 corresponds to pan left, 1 corresponds to pan right
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="yPosition">
            <xsd:annotation>
                <xsd:documentation>
                    Set the y-position of the panned sound

                    0 corresponds to pan front 1 corresponds to pan back
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="roomSize">
            <xsd:annotation>
                <xsd:documentation>Set the room size.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="10" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="spectralDelayAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Module that divides the signal into 8 spectral bands, and allows a separate delay-time and feedback to be specified for each band.

                [Tags:complex|processing|spectral|delay|dynamics]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="delay1">
            <xsd:annotation>
                <xsd:documentation>Set the delay time in seconds (s) for the first spectral band</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="delay2">
            <xsd:annotation>
                <xsd:documentation>Set the delay time in seconds (s) for the second spectral band</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="delay3">
            <xsd:annotation>
                <xsd:documentation>Set the delay time in seconds (s) for the third spectral band</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="delay4">
            <xsd:annotation>
                <xsd:documentation>Set the delay time in seconds (s) for the fourth spectral band</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="delay5">
            <xsd:annotation>
                <xsd:documentation>Set the delay time in seconds (s) for the fifth spectral band</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="delay6">
            <xsd:annotation>
                <xsd:documentation>Set the delay time in seconds (s) for the sixth spectral band</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="delay7">
            <xsd:annotation>
                <xsd:documentation>Set the delay time in seconds (s) for the seventh spectral band</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="delay8">
            <xsd:annotation>
                <xsd:documentation>Set the delay time in seconds (s) for the eighth spectral band</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="feedback1">
            <xsd:annotation>
                <xsd:documentation>Set the amount of signal fed from the output of the first spectral band back to the input of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="feedback2">
            <xsd:annotation>
                <xsd:documentation>Set the amount of signal fed from the output of the second spectral band back to the input of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="feedback3">
            <xsd:annotation>
                <xsd:documentation>Set the amount of signal fed from the output of the third spectral band back to the input of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="feedback4">
            <xsd:annotation>
                <xsd:documentation>Set the amount of signal fed from the output of the fourth spectral band back to the input of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="feedback5">
            <xsd:annotation>
                <xsd:documentation>Set the amount of signal fed from the output of the fifth spectral band back to the input of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="feedback6">
            <xsd:annotation>
                <xsd:documentation>Set the amount of signal fed from the output of the sixth spectral band back to the input of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="feedback7">
            <xsd:annotation>
                <xsd:documentation>Set the amount of signal fed from the output of the seventh spectral band back to the input of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="feedback8">
            <xsd:annotation>
                <xsd:documentation>Set the amount of signal fed from the output of the eighth spectral band back to the input of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="spectralFreezeAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Freeze a snapshot the audio spectrum at a given moment for an indefinite period of time.

                [Tags:complex|processing|spectral]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="spectralVocoderAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                This module imposes the spectral qualities of the sound from an audio buffer onto the incoming signal from Audio Input 1

                The sound in the buffer must be loaded from an audio file or recorded live from Audio Input 2.

                [Tags:spectral|complex|processing]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="loadSound">
            <xsd:annotation>
                <xsd:documentation>Set the sound to be loaded for spectral vocoding</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="recSound">
            <xsd:annotation>
                <xsd:documentation>Record a sound into the module to be used as a source to timbre-stamp the signal from Audio Input 1</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="resizeSound">
            <xsd:annotation>
                <xsd:documentation>Set the length of audio to be recorded in seconds (s)</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="90" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="relPosition">
            <xsd:annotation>
                <xsd:documentation>Set the relative position within the loaded or recorded sound to uses as a basis for timbre stampling</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="squelchThreshold">
            <xsd:annotation>
                <xsd:documentation>
                    Set the amount of "whitening" applied to Audio Input 1 prior to timbre stamping

                    This additively sets the noise floor of the input signal
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-100" />
                    <xsd:maxInclusive value="0" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="stereoAudioInAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Stereo audio input.

                [Tags:core|simple|input]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="startChannel">
            <xsd:annotation>
                <xsd:documentation>
                    Set input channel on the audio interface.

                    An offset of "2" will mean that the AudioIn module uses audio from channel 2 on the audio interface.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="24" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="stereoAudioOutAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Stereo audio output.

                [Tags:core|simple|output]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="startChannel">
            <xsd:annotation>
                <xsd:documentation>
                    Set input channel on the audio interface

                    An offset of "2" will mean that the AudioIn module uses audio from channel 2 on the audio interface
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="24" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="stereoChorusAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                A simple "Roland-style" stereo chorus.

                [Tags:complex|processing|spectral|panning]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="intensity">
            <xsd:annotation>
                <xsd:documentation>Set the depth of the chorus applied to the sound from  the Audio Input</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="3" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="frequency">
            <xsd:annotation>
                <xsd:documentation>Set the frequency in Hertz (Hz) of the chorus applied to the sound from the Audio Input</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="20" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="stereoConvolutionAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Performs 2 channels of partioned convolution on Audio Input 1 and Audio Input 2 using impulse responses loaded from file.

                [Tags:complex|processing|spectral|soundfile]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="file1">
            <xsd:annotation>
                <xsd:documentation>
                    Set the file path to the first impulse response file

                    This impulse response is convolved with Audio Input 1 to produce the sound sent to Audio Output 1
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="file2">
            <xsd:annotation>
                <xsd:documentation>
                    Set the file path to the second impulse response file

                    This impulse response is convolved with Audio Input 2 to produce the sound sent to Audio Output 2
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="stereoGranularSynthesizerAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Perform granular synthesis and stereo spatialisation using an audio buffer.

                The buffer can be filled by loading a soundfile or by recording audio in live from the Audio Input.

                [Tags:complex|processing|granular|panning|soundfile|dynamics]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="loadSound">
            <xsd:annotation>
                <xsd:documentation>Set the sound to be loaded into the granular synthesizer to be used as a source for synthesis</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="recSound">
            <xsd:annotation>
                <xsd:documentation>Record live sound from the module Audio Input into the granular synthesizer to be used as a source for synthesis</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="recLength">
            <xsd:annotation>
                <xsd:documentation>
                    Set the length of the audio buffer, used by the Record Sound function

                    This controls the length of the live audio buffer used for granular synthesis
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="90" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="nrOfPositionQuants">
            <xsd:annotation>
                <xsd:documentation>
                    This is the number of discrete steps between Minimum Cloud Position and Maximum Cloud Position

                    Grain spatialisation locations will be locked to these pan locations

                    A setting of zero means an infinite number of posssible grain locations between Minimum Cloud Position and Maximum Cloud Position
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1000000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="maxNrGrains">
            <xsd:annotation>
                <xsd:documentation>
                    Set the maximum number of grain generators.

                    This is effectively a "grain polyphony" setting, controlling the maximum number of grains that can be overlapping at any one time
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="40" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="attackTime">
            <xsd:annotation>
                <xsd:documentation>Relative attack time of grain envelope as a percentage (%) of the overall grain length</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="50" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="releaseTime">
            <xsd:annotation>
                <xsd:documentation>Relative release time of grain envelope as a percentage (%) of the overall grain length</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="50" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="maxGrainSize">
            <xsd:annotation>
                <xsd:documentation>
                    This is the maximum possible grain length in seconds (s)

                    Grain sizes are generated randomly between the values set in "Maximum Grain Size" and "Minimum Grain Size"
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.001" />
                    <xsd:maxInclusive value="100" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="maxPitchTransposition">
            <xsd:annotation>
                <xsd:documentation>
                    This is the maximum possible grain pitch transposition in cents

                    Grain pitches are generated randomly between the values set in "Maximum Pitch Transposition" and "Minimum Pitch Transposition"
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-2400" />
                    <xsd:maxInclusive value="2400" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="minGrainSize">
            <xsd:annotation>
                <xsd:documentation>
                    This is the minimum possible grain length in seconds (s)

                    Grain sizes are generated randomly between the values set in "Maximum Grain Size" and "Minimum Grain Size"
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.001" />
                    <xsd:maxInclusive value="100" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="minPitchTransposition">
            <xsd:annotation>
                <xsd:documentation>
                    This is the minimum possible grain pitch transposition in cents

                    Grain pitches are generated randomly between the values set in "Maximum Pitch Transposition" and "Minimum Pitch Transposition"
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-2400" />
                    <xsd:maxInclusive value="2400" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="maxCloudDensity">
            <xsd:annotation>
                <xsd:documentation>This is the maximum number of randomly generated grains you can hear at the same time</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="40" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="maxSpatialPosition">
            <xsd:annotation>
                <xsd:documentation>
                    This is the maximum spatial position for grain placement

                    Grains are positioned randomly at positions between Minimum Spatial Position and Maximum Spatial Position on a grid defined by the Number of Position Locations parameter
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="minCloudDensity">
            <xsd:annotation>
                <xsd:documentation>This is the minimum number of randomly generated grains you can hear at the same time</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="40" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="minSpatialPosition">
            <xsd:annotation>
                <xsd:documentation>
                    This is the minimum spatial position for grain placement

                    Grains are positioned randomly at positions between Minimum Spatial Position and Maximum Spatial Position on a grid defined by the Number of Position Locations parameter
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="devCloudPosition">
            <xsd:annotation>
                <xsd:documentation>
                    This is the maximum deviation of a randomly chosen grain in relation to the audio buffer

                    A higher value for Cloud Position Deviation will result in variation in the audio buffer locations used for granular synthesis
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="10" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="relMeanCloudPosition">
            <xsd:annotation>
                <xsd:documentation>
                    This is the relative mean value of a randomly chosen grain position out of the audio buffer

                    This parameter controls where in the audio buffer the highest number of grains will be taken from

                    Lower values will result in more grains being taken from the beginning of the audio buffer, higher values will result in more grains being taken from the end
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="stereoPannerAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Takes a monophonic input and pans between 2 stereo channels using equal power panning

                The panner assumes that speakers are placed in a layout as follows:

                out1 : left
                out2 : right.

                [Tags:simple|processing|panning|dynamics]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="panning">
            <xsd:annotation>
                <xsd:documentation>
                    This parameter pans the input channel to the 2 output channels

                    -45 pans the signal left +45 pans the signal right. 0 divides the signal into 70 % to the 1st and 70 % to the 2nd output thus preserving **equal power** as the Audio Input is panned
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="-45" />
                    <xsd:maxInclusive value="45" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="stereoReverbAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Stereo Reverb based on a Feedback Delay Network 12th order.

                [Tags:complex|processing|reverb|panning|delay]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="decayTimeHigh">
            <xsd:annotation>
                <xsd:documentation>
                    Set the relative reverb time of the high frequency components in the sound

                    This is the T60 decay time of the highest frequency band 4000..16000 Hertz (Hz) of the reverb
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="1000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="decayTimeLow">
            <xsd:annotation>
                <xsd:documentation>
                    Set the relative reverb time of the low frequency components in the sound

                    This is the T60 decay time of the lowest frequency band 0.1..1000 Hertz (Hz) of the reverb
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="1000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="decayTimeMid">
            <xsd:annotation>
                <xsd:documentation>
                    Set the relative reverb time of the mid frequency components in the sound

                    This is the T60 decay time of the 3rd frequency band 250..1000 Hertz (Hz) of the reverb
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="1000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="decayTimeMidHigh">
            <xsd:annotation>
                <xsd:documentation>
                    Set the relative reverb time of the Mid-High frequency components in the sound

                    This is the T60 decay time of the 4th frequency band 1000..4000 Hertz (Hz) of the reverb
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="1000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="decayTimeMidLow">
            <xsd:annotation>
                <xsd:documentation>
                    Set the relative reverb time of the mid-low frequency components in the sound

                    This is the T60 decay time of the 2nd frequency band 62..250 Hertz (Hz) of the reverb
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="1000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="roomVolume">
            <xsd:annotation>
                <xsd:documentation>
                    Set the volume of the room in cubic metres (m^3)

                    Volume is length * width * height
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="8" />
                    <xsd:maxInclusive value="100000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="earlyLateBalance">
            <xsd:annotation>
                <xsd:documentation>
                    Set the ratio between "early reflections" (echo) and "late diffusion" (reverberation)

                    A value of 0 causes only early reflections to be heard, a value of 1 causes only reverberation to be heard
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="sourceDistance">
            <xsd:annotation>
                <xsd:documentation>Set the relative distance of the listener to the signal source in the virtual space</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="firstEchoPanning">
            <xsd:annotation>
                <xsd:documentation>
                    Set the panning of the first early reflections

                    A value of 0 will pan the early reflections "left" to Audio Output 1

                    A value of 1 will pan the early reflections "right" to Audio Output 2
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="roomShape">
            <xsd:annotation>
                <xsd:documentation>
                    Set the shape of the virtual space

                    A value of 0 gives a more cubic space, a value of 1 gives a more elongated space
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="stereoReverbTwoAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Simple stereo reverb with a freeze function.

                [Tags:complex|processing|reverb|dynamics|delay]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="roomsize">
            <xsd:annotation>
                <xsd:documentation>Set the relative size of the room to be simulated</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="damping">
            <xsd:annotation>
                <xsd:documentation>
                    Set the amount of damping on room surfaces

                    A value of 0 will result in a very "echoey" undamped sound

                    A value of 1 will result in a very "tight" damped sound
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="width">
            <xsd:annotation>
                <xsd:documentation>Set the stereo width of the reverb</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="freeze">
            <xsd:annotation>
                <xsd:documentation>Freeze the reverb tail</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="stereoSoundfilerAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Play and records stereo soundfiles.

                [Tags:simple|soundfile|synthesis]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="mute">
            <xsd:annotation>
                <xsd:documentation>Mute the output of the soundfiler</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="load">
            <xsd:annotation>
                <xsd:documentation>Load an audio file into the Soundfiler</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="record">
            <xsd:annotation>
                <xsd:documentation>Start and stop recording</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="play">
            <xsd:annotation>
                <xsd:documentation>Start and pause playback</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="loop">
            <xsd:annotation>
                <xsd:documentation>Toggle looping</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="speed">
            <xsd:annotation>
                <xsd:documentation>
                    Set playback speed

                    This is set as a ratio to the base soundfile speed, so a value of 2 means twice the speed and .5 means half the speed
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="10" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="position">
            <xsd:annotation>
                <xsd:documentation>Show and set the relative playback  position</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="gain">
            <xsd:annotation>
                <xsd:documentation>Set the gain</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="4" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="subSynthAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Basic subtractive synthesis module

                The module can be played directly via MIDI with 12-note polyphony

                Provides multiple waveforms (sine, square, triangle, sawtooth), attack, decay, sustain and release parameters, two formants and one amplitude-dependent lowpass filter.

                [Tags:complex|synthesis]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="mute">
            <xsd:annotation>
                <xsd:documentation>Mute the output of the module. This will cause the module to become silent, but the module will remain active</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="gain">
            <xsd:annotation>
                <xsd:documentation>Set the gain of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="4" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="chNumber">
            <xsd:annotation>
                <xsd:documentation>
                    Set the MIDI receive channel number between 1 and 16

                    0 means receive on all channels
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="16" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="waveform">
            <xsd:annotation>
                <xsd:documentation>Set base waveform to be used for subtractive synthesis</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="3" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="attack">
            <xsd:annotation>
                <xsd:documentation>Set the attack time in seconds (s) of the synth</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="0.2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="decay">
            <xsd:annotation>
                <xsd:documentation>Set the decay time in seconds (s) of the synth</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="sustain">
            <xsd:annotation>
                <xsd:documentation>Relative sustain level</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="release">
            <xsd:annotation>
                <xsd:documentation>Set the release time in seconds (s) of the synth</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="2" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="formant1freq">
            <xsd:annotation>
                <xsd:documentation>Frequency in Hertz (Hz) of the first formant</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="5000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="formant1Q">
            <xsd:annotation>
                <xsd:documentation>
                    Q factor of the first formant

                    In technical terms, this sets the formant bandwidth in constant ratio to the formant frequency
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="20" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="formant2freq">
            <xsd:annotation>
                <xsd:documentation>Frequency in Hertz (Hz) of the second formant</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="5000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="formant2Q">
            <xsd:annotation>
                <xsd:documentation>
                    Q factor of the second formant

                    In technical terms, this sets the formant bandwidth in constant ratio to the formant frequency
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="20" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="lp">
            <xsd:annotation>
                <xsd:documentation>Cut-off frequency for low-pass filter in Hertz (Hz)</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="20000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="lpmod">
            <xsd:annotation>
                <xsd:documentation>Amplitude multiplier for the low-pass filter</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="20000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="tapDelayAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Basic delay with feedback.

                [Tags:simple|processing|delay]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="delayTime">
            <xsd:annotation>
                <xsd:documentation>Set the amount of time the input signal is delayed by, in seconds (s)</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.001" />
                    <xsd:maxInclusive value="36" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="feedback">
            <xsd:annotation>
                <xsd:documentation>Set the amount of the output signal that is fed back to the input of the delay</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="frequency">
            <xsd:annotation>
                <xsd:documentation>Set the cutoff frequency in Hertz (Hz) of the low-pass filter, which filters the signal fed back from the delay output to the delay input</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="22050" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="tempoDetectorAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Detect and display the current and the complessive tempo value of the incoming sound in BPM.

                [Tags:simple|analysis]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="currentTempo">
            <xsd:annotation>
                <xsd:documentation>Displays the detected current tempo value in BPM.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="1" />
                    <xsd:maxInclusive value="400" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="resolution">
            <xsd:annotation>
                <xsd:documentation>Set the resolution of the tempo detection process.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="500" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="complessiveTempo">
            <xsd:annotation>
                <xsd:documentation>Displays the detected complesive tempo value in BPM.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="300" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="testSourceAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Module providing a selection of audio testing sources.

                [Tags:simple|synthesis]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="mute">
            <xsd:annotation>
                <xsd:documentation>Mute the output of the module. This will cause the module to become silent, but the module will remain active.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="gain">
            <xsd:annotation>
                <xsd:documentation>Set the gain of the test signal</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="4" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="frequency">
            <xsd:annotation>
                <xsd:documentation>
                    Set the frequency in Hertz (Hz) of the test tone

                    This parameter only applies if the Source setting is "Sine"
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="20" />
                    <xsd:maxInclusive value="20000" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="source">
            <xsd:annotation>
                <xsd:documentation>Set the test source waveform or noise</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="sine" />
                    <xsd:enumeration value="noise" />
                    <xsd:enumeration value="burst" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="vibratoChorusAttributeGroup">
        <xsd:annotation>
            <xsd:documentation>
                Basic vibrato module.

                [Tags:simple|processing]
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="bypass">
            <xsd:annotation>
                <xsd:documentation>Bypass the module processing</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="inLevel">
            <xsd:annotation>
                <xsd:documentation>Set the input level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="outLevel">
            <xsd:annotation>
                <xsd:documentation>Set the output level of the module</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="mix">
            <xsd:annotation>
                <xsd:documentation>Control the relative mix of processed and unprocessed sound</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="intensity">
            <xsd:annotation>
                <xsd:documentation>Set the depth of the vibrato</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="3" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="frequency">
            <xsd:annotation>
                <xsd:documentation>Set the frequency of the vibrato in Hertz (Hz)</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.1" />
                    <xsd:maxInclusive value="20" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="active">
            <xsd:annotation>
                <xsd:documentation>Turns module processing on and off</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:integer">
                    <xsd:minInclusive value="0" />
                    <xsd:maxInclusive value="1" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>

</xsd:schema>