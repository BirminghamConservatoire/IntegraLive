This directory contains 'test.py', the unit testing file for the XMLRPC interface of libIntegra.

For the TestLoadSave unit test, the example IXD file 'text.ixd' is required. The save path for command.save() may be specified by editing the global variable WRITE_FILE_NAME at the top of 'test.py'. If this is set to an empty string, then a Tk file dialog will be provided to specify the save path.

Dependencies:

- python >= 2.5
- python-tk
- testoob (optional)

======= Build and run the tests =========

Begin by building and installing the library:

  $ cd library/trunk
  $ sh libIntegra-Install.sh
  
The script will ask you for privileges to install the library in the default directory (/usr/local/lib). 

You may need to set the environment variable LD_LIBRARY_PATH to point to /usr/local/lib:

  $ export LD_LIBRARY_PATH=/usr/local/lib

Remeber that this setting is only valid in the current session. Should you log out or reboot, you will have to reset the LD_LIBRARY_PATH envar. Get around this by putting the line above in your .bash_profile). 

Now it's time to start the Integra server by loading the example file test.pd. Begin by building the pd file:

  $ cd examples/PD
  $ make test.pd

Now, start the server by loading test.pd in Pd:

  $ pd -noaudio -noprefs -path /usr/local/lib/pd/extra/ -path ../../../../modules/trunk/implementations/pd test.pd

If you get an error message in the Pd output that the libIntegra.so could not be found (libIntegra.so.0: cannot open shared object file: No such file or directory) you need to set the LD_LIBRARY_PATH as described above.

... or attach it as a gdb process in order to intercept debug messages:

  $ gdb --args pd -noaudio -noprefs -path /usr/local/lib/pd/extra/ -path ../../../../modules/trunk/implementations/pd test.pd

Now with the server up an running the tests as defined in library/trunk/testing/xmlrpc/test.py may be run:

  $ cd ../../testing/xmlrpc/
  $ python test.py